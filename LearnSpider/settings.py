"""
Django settings for LearnSpider project.

Generated by 'django-admin startproject' using Django 5.0.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-3$@35gg*j)v%o)*82^1n-x7eh!iq22!y3#g@gr35=3hazt)=!g"

# SECURITY WARNING: don't run with debug turned on in production!
# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "rest_framework",
    "topics",
    "api",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "LearnSpider.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "LearnSpider.wsgi.application"

# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/


USE_I18N = True
TIME_ZONE = "Asia/Shanghai"
USE_TZ = True

LANGUAGE_CODE = "zh-Hans"
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = "static/"
STATICFILES_DIRS = [
    BASE_DIR / "static",
]
import os

STATIC_ROOT = os.path.join(BASE_DIR, "static_root")
# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

DEBUG = True
# DEBUG = False
ALLOWED_HOSTS = [
    "www.stardream.vip",
    "stardream.vip",
    "0.0.0.0",
    "127.0.0.1",
    "localhost",
]

# PORT=8001
topics_path_prefix = "topic/"

# settings.py 的末尾添加以下代码

try:
    from .local_settings import *
    from .secret_settings import *
except ImportError as e:
    print(e)
    pass

from dotenv import load_dotenv
# 定义日志目录
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
LOG_DIR = os.path.join(BASE_DIR, "logs")

# 如果日志目录不存在，则创建
if not os.path.exists(LOG_DIR):
    os.makedirs(LOG_DIR)
load_dotenv()
DJANGO_ENV = os.getenv("DJANGO_ENV")
if DJANGO_ENV == "local":
    DEBUG = True
else:
    DEBUG = False

    LOGGING = {
        "version": 1,
        "disable_existing_loggers": False,
        "formatters": {
            "verbose": {
                "format": "[%(asctime)s] %(message)s",
                "datefmt": "%d/%b/%Y %H:%M:%S",
            },
        },
        "handlers": {
            "debug_file": {
                "level": "DEBUG",
                "class": "logging.FileHandler",
                "filename": os.path.join(LOG_DIR, "django_debug.log"),
                "formatter": "verbose",
            },
            "error_file": {
                "level": "ERROR",
                "class": "logging.FileHandler",
                "filename": os.path.join(LOG_DIR, "django_error.log"),
                "formatter": "verbose",
            },
        },
        "loggers": {
            "django": {
                "handlers": ["debug_file", "error_file"],
                "level": "DEBUG",
                "propagate": True,
            },
        },
    }
print("DEBUG",DEBUG)
